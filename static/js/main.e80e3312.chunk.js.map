{"version":3,"sources":["components/BorderCountries.js","components/CountryInfoStat.js","components/Flag.js","components/DetailView.js","components/Header.js","components/MiniCountryContainer.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["BorderCountries","props","borderCountries","data","length","borderCountryItems","map","country","className","CountryInfoStat","tag","join","d","name","Flag","src","flag","alt","width","DetailView","countryData","stats","key","push","onClick","callback","icon","faArrowLeft","countryname","bordercountries","Header","theme_switch","darkMode","id","faSun","faMoon","MiniCountryContainer","regions","Home","useState","region","setRegion","displayDropdown","setDisplayDropdown","dropdown_items","r","callRegion","countries","countriesData","viewCountryDetails","dropdown_text","faSearch","callName","document","getElementById","value","type","placeholder","e","faAngleDown","localStorage","getItem","setItem","console","log","App","setDarkMode","view","setView","undefined","setCountry","setCountriesData","callApi","api_url","sessionStorage","JSON","parse","fetch","Request","then","response","json","parsedJSON","borders","nativeName","population","subregion","capital","topLevelDomain","currencies","languages","stringify","useEffect","body","classList","add","remove","clear","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e80e3312.chunk.js","sourcesContent":["import './BorderCountries.css'\r\n\r\nfunction BorderCountries(props) {\r\n    const borderCountries = props.data;\r\n    if (borderCountries.length > 0) {\r\n        const borderCountryItems = borderCountries.map(country =>\r\n            <div key={country} className=\"item element shadow\">\r\n                {country}\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className=\"BorderCountries\">\r\n                <p><b>Border Countries:</b></p>\r\n                <div className=\"flex-container\">\r\n                    {borderCountryItems}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return null;\r\n}\r\n\r\nexport default BorderCountries;","function CountryInfoStat(props) {\r\n    const tag = props.tag;\r\n    let data = props.data;\r\n\r\n    if (data) {\r\n        if (tag === \"Top Level Domain\")\r\n            data = data.join(', ');\r\n        else if (tag === \"Currencies\" || tag === \"Languages\") {\r\n            data = data.map((d) => d.name);\r\n            data = data.join(', ');\r\n        }\r\n        return (\r\n            <p className=\"CountryInfoStat\">\r\n                <b>{tag}: </b>\r\n                <span>{data}</span>\r\n            </p>\r\n        );\r\n    }\r\n    else\r\n        return null;\r\n}\r\n\r\nexport default CountryInfoStat;","function Flag(props) {\r\n    return (\r\n        <div className=\"Flag\">\r\n            <img src={props.flag} alt=\"country flag\" width=\"100%\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Flag;","import './DetailView.css'\r\nimport BorderCountries from './BorderCountries'\r\nimport CountryInfoStat from './CountryInfoStat'\r\nimport Flag from './Flag';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction DetailView(props) {\r\n    const countryData = props.countryData;\r\n    let stats = [];\r\n    for (const key in countryData.stats) {\r\n        stats.push(\r\n            <CountryInfoStat key={key} tag={key} data={countryData.stats[key]} />\r\n        );\r\n        if (key === 'Capital') {\r\n            stats.push(\r\n                <p key=\"blankspace\" className=\"blankspace\">&nbsp;</p>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"DetailView\">\r\n            <div className=\"element back-button shadow\" onClick={props.callback}>\r\n                <FontAwesomeIcon icon={faArrowLeft} />\r\n                &nbsp;\r\n            Back\r\n            </div>\r\n            <div className=\"country-info\">\r\n                <Flag flag={countryData.flag} />\r\n                <div className=\"country-stats\">\r\n                    <h1>{countryData.countryname}</h1>\r\n                    <div className=\"secondary-stats\">\r\n                        {stats}\r\n                    </div>\r\n                    <p>&nbsp;</p>\r\n                    <BorderCountries data={countryData.bordercountries} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailView;","import './Header.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMoon, faSun } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Header(props) {\r\n    let theme_switch;\r\n    if (!props.darkMode) {\r\n        theme_switch = (\r\n            <div id=\"theme-switch\" onClick={props.callback}>\r\n                <FontAwesomeIcon icon={faMoon} />\r\n                &nbsp;\r\n                Dark Mode\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        theme_switch = (\r\n            <div id=\"theme-switch\" onClick={props.callback}>\r\n                <FontAwesomeIcon icon={faSun} />\r\n                &nbsp;\r\n                Light Mode\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <header className=\"element\" id=\"header\">\r\n            <div id=\"header-title\">Where in the world?</div>\r\n            {theme_switch}\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import CountryInfoStat from './CountryInfoStat';\r\nimport Flag from './Flag';\r\nimport './MiniCountryContainer.css'\r\n\r\nfunction MiniCountryContainer(props) {\r\n    const countryData = props.countryData;\r\n    return (\r\n        <div className=\"MiniCountryContainer element\" onClick={props.onClick}>\r\n            <Flag flag={countryData.flag} />\r\n            <div className=\"bottom\">\r\n                <h1>{countryData.countryname}</h1>\r\n                <CountryInfoStat tag={\"Population\"} data={countryData.stats[\"Population\"]} />\r\n                <CountryInfoStat tag={\"Region\"} data={countryData.stats[\"Region\"]} />\r\n                <CountryInfoStat tag={\"Capital\"} data={countryData.stats[\"Capital\"]} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MiniCountryContainer;","import './Home.css'\r\nimport MiniCountryContainer from './MiniCountryContainer'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch, faAngleDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst regions = [\"All\", \"Africa\", \"Americas\", \"Asia\", \"Europe\", \"Oceania\"];\r\n\r\nfunction Home(props) {\r\n    const [region, setRegion] = useState(\"All\");\r\n    const [displayDropdown, setDisplayDropdown] = useState(false);\r\n\r\n    const dropdown_items = (\r\n        <div className=\"dropdown-items element\">\r\n            {regions.map((r) =>\r\n                <div key={r} className=\"option\" onClick={() => {\r\n                    setRegion(r);\r\n                    props.callRegion(r);\r\n                }}>{r}</div>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n    function toggleDropdown(event) {\r\n        if (!displayDropdown)\r\n            setDisplayDropdown(true);\r\n        else {\r\n            // TODO: Implement filtering\r\n            setDisplayDropdown(false);\r\n        }\r\n    }\r\n\r\n    // display countriesData based on whether or not it has loaded\r\n    const countries = props.countriesData ?\r\n        props.countriesData.map((country) => (\r\n            <MiniCountryContainer key={country.countryname} countryData={country} onClick={() => { props.viewCountryDetails(country) }} />\r\n        ))\r\n        :\r\n        <div>Loading...</div>;\r\n\r\n    const dropdown_text = (region === \"All\") ? \"Filter by Region\" : \"Region: \" + region;\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            <div className=\"search-filter-container\">\r\n                <div className=\"search-input element shadow\">\r\n                    <FontAwesomeIcon icon={faSearch} onClick={() => {\r\n                        props.callName(document.getElementById('search').value);\r\n                    }} />\r\n                    <input type=\"text\" id=\"search\" placeholder=\"Search for a country...\" />\r\n                </div>\r\n                <div className=\"filter-dropdown element shadow\" onClick={(e) => {\r\n                    // e.stopPropagation();\r\n                    toggleDropdown(e);\r\n                }}>\r\n                    <div className=\"filter-dropdown-text\">\r\n                        {dropdown_text}\r\n                    </div>\r\n                    <FontAwesomeIcon icon={faAngleDown} />\r\n                    {displayDropdown && dropdown_items}\r\n                </div>\r\n            </div>\r\n            <div className=\"countries-container\">\r\n                {countries}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport DetailView from './components/DetailView';\r\nimport Header from './components/Header';\r\nimport Home from './components/Home';\r\n\r\n// store theme in local storage (does not expire)\r\nif (!localStorage.getItem('darkMode')) {\r\n  localStorage.setItem('darkMode', 1);\r\n  console.log(\"Set initial Local Storage for darkMode!\")\r\n}\r\n\r\nfunction App() {\r\n  // state\r\n  const [darkMode, setDarkMode] = useState(localStorage.getItem('darkMode') === '1');\r\n  const [view, setView] = useState('home');\r\n  const [country, setCountry] = useState(undefined);\r\n  const [countriesData, setCountriesData] = useState(undefined);\r\n\r\n  // componentDidMount\r\n  useEffect(() => {\r\n    callApi('https://restcountries.com/v2/all');\r\n  }, []);\r\n\r\n  // componentDidMount + componentDidUpdate for darkMode\r\n  useEffect(() => {\r\n    if (darkMode) {\r\n      document.body.classList.add('darkMode');\r\n      document.body.classList.remove('lightMode');\r\n      localStorage.setItem('darkMode', 1);\r\n    }\r\n    else {\r\n      document.body.classList.add('lightMode')\r\n      document.body.classList.remove('darkMode');\r\n      localStorage.setItem('darkMode', 0);\r\n    }\r\n\r\n    // only run if darkMode is updated (when theme button is clicked)\r\n  }, [darkMode]);\r\n\r\n  function callApi(api_url) {\r\n    // store api results in session storage (expires when tab is closed)\r\n    if (!sessionStorage.getItem('apiCall')) {\r\n      fetch(new Request(api_url))\r\n        .then(response => response.json())\r\n        .then(parsedJSON => {\r\n          const data = parsedJSON.map((country) => {\r\n            return {\r\n              countryname: country.name,\r\n              bordercountries: country.borders,\r\n              flag: country.flag,\r\n              stats: {\r\n                \"Native Name\": country.nativeName,\r\n                \"Population\": country.population,\r\n                \"Region\": country.region,\r\n                \"Sub Region\": country.subregion,\r\n                \"Capital\": country.capital,\r\n                \"Top Level Domain\": country.topLevelDomain,\r\n                \"Currencies\": country.currencies,\r\n                \"Languages\": country.languages\r\n              }\r\n            };\r\n          })\r\n          setCountriesData(data);\r\n          sessionStorage.setItem('apiCall', JSON.stringify(data));\r\n          console.log(\"Set initial Session Storage for apiCall!\");\r\n        });\r\n    }\r\n    else {\r\n      if (!countriesData)\r\n        setCountriesData(JSON.parse(sessionStorage.getItem('apiCall')));\r\n      console.log(\"API data already exists!\");\r\n    }\r\n  }\r\n\r\n  function viewCountryDetails(data) {\r\n    setView('details');\r\n    setCountry(data);\r\n  }\r\n  function callRegion(data) {\r\n    sessionStorage.clear();\r\n    if (data === \"All\")\r\n      callApi(`https://restcountries.com/v2/all`);\r\n    else\r\n      callApi(`https://restcountries.com/v2/region/${data}`);\r\n  }\r\n  function callName(data) {\r\n    sessionStorage.clear();\r\n    callApi(`https://restcountries.com/v2/name/${data}`);\r\n  }\r\n  function callbackDetailView() {\r\n    setView('home');\r\n    setCountry(undefined);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header darkMode={darkMode} callback={() => { setDarkMode(!darkMode) }} />\r\n      {view === 'home' && <Home countriesData={countriesData} viewCountryDetails={viewCountryDetails} callRegion={callRegion} callName={callName} />}\r\n      {view === 'details' && <DetailView countryData={country} callback={callbackDetailView} />}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}